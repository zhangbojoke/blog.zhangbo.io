{
  "name": "java基础-反射",
  "tagline": "java中的反射",
  "body": "首先声明java中反射的定义，概念，与作用。\r\njava中的反射可以直接获取类的属性和方法，从功能上来讲，反射与直接new一个新的对象并没有什么不同。\r\n但是从灵活程度上来讲,反射可以更灵活的构造程序，这种灵活框架系统层面上。\r\n以框架举例，一个框架的开发者，并不知道所使用框架的使用者会写什么class和method来进行使用者自身业务需求的开发，那么框架的开发者也不可能得知使用者到底有什么class，这就造成了开发者在进行框架开发时的困难，无法得知类的包和名，便无法直接通过new来新建并操纵这个类。\r\n在这种困难与需求只上，我们就可以使用反射classLoader其中的方法，通过传入一个string的完整包名和类名，通过装载器对这个类进行装载，实现这个类的各种属性与方法。同时我们还可以利用反射的机制，来绕过类的私有安全检查，直接调用类的private或者protect方法。\r\n示例代码：\r\n见com.invoker.reflect",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}